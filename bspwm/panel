#!/bin/env bash

MAIN_COLOR="#42855B"
PANEL_FIFO="/tmp/panel"

Format() {
	printf "%%{F$MAIN_COLOR}%s%%{F-} %s" "$1" "$2"
}


CurrentTime() {
	printf "$(date +'%b %d %H:%M')"
}

Uptime() {
	local cmd=$(uptime | sed "s/.*up//; s/,.*//; s/min/m/; s/\s//g")
	Format "UPTIME" "$cmd"
}

Memory() {
	local info=$(cat /proc/meminfo | grep 'Mem\|Buffers\|\Cached:\|Shmem:\|SReclaimable')
	local total=$(echo "$info" | awk '{if (NR==1) {print $2}}')
	local free=$(echo "$info" | awk '{if (NR==2) {print $2}}')
	local buffers=$(echo "$info" | awk '{if (NR==4) {print $2}}')
	local cache=$(echo "$info" | awk '{if (NR==5) {print $2}}')
	local shared=$(echo "$info" | awk '{if (NR==7) {print $2}}')
	local srec=$(echo "$info" | awk '{if (NR==8) {print $2}}')

	local f_total=$(echo $(( $total * 1024 )) | numfmt --to=iec-i --format %.2f)
	local f_used=$(echo $(( ($total+$shared-$free-$buffers-$cache-$srec)*1024 )) | numfmt --to=iec-i)
	Format "MEM" "$f_used/$f_total"
}

Disk() {
	local cmd=$(df -h | awk '{if ($6 == "/") print $3 "/" $2}')
	Format "DISK" "$cmd"
}

CPU() {
	local temp=$(cat /sys/class/thermal/thermal_zone0/temp)
	local c=$(expr $temp / 1000)
	Format "CPU" "$c%"
}

Battery() {
	local capacity=$(cat /sys/class/power_supply/BAT0/capacity)
	local status=$(cat /sys/class/power_supply/BAT0/status | cut -c 1)
	Format "BAT" "$capacity%[$status]"
}

Network() {
	local state="DOWN"

	if [[ $(ip -4 a | grep "^[[:digit:]]: en\|wl" | grep -o "state UP" | head -n 1) == "state UP" ]]
	then 
		state="UP"
	else 
		state="DOWN"
	fi

	Format "NET" "$state"
}

Workspaces() {
	local focused=$(bspc query -D --names -d focused)
	bspc query -D --names | 
		while read -r d; do 
			printf "%%{A:bspc desktop -f $d:}"

			is_occupied=$(bspc query -D --names -d .occupied | grep "$d")
			if [ $is_occupied == $d ];then
				printf "%%{F#FFB84C}"
			else
				printf "%%{F}"
			fi


			if [ $d == $focused ]; then
				printf "[$d]"
			else
				printf "$d"
			fi

			printf "  %%{F-}%%{A}"
		done
}

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc subscribe > "$PANEL_FIFO" &
while true; do
	printf "\n" > "$PANEL_FIFO"
	sleep 5
done &

while read -r event; do
	ws=$(Workspaces)
	time=$(CurrentTime)
	uptime=$(Uptime)
	disk=$(Disk)
	cpu=$(CPU)
	mem=$(Memory)
	net=$(Network)

	# check if laptop or desktop to show battery
	if [ -d "/sys/module/battery" ]; then
		bat=$(Battery)
		fmt="%%{l}  %s%%{c}%s%%{r}%s  %s  %s  %s  %s  %s  "
		printf "$fmt" "$ws" "$time" "$uptime" "$disk" "$bat" "$cpu" "$mem" "$net"
	else
		fmt="%%{l}  %s%%{c}%s%%{r}%s  %s  %s  %s  %s  "
		printf "$fmt" "$ws" "$time" "$uptime" "$disk" "$cpu" "$mem" "$net"
	fi
done < "$PANEL_FIFO"
