#!/bin/env bash

MAIN_COLOR="#42855B"
PANEL_FIFO="/tmp/panel"

Format() {
	printf "%%{F$MAIN_COLOR}%s%%{F-} %s" "$1" "$2"
}


CurrentTime() {
	printf "$(date +'%b %d %H:%M')"
}

Uptime() {
	local cmd=$(uptime | sed "s/.*up//; s/,.*//; s/min/m/; s/\s//g")
	Format "UPTIME" "$cmd"
}

Memory() {
	local cmd=$(free -h | awk '{if ($1 == "Mem:") print $3 "/" $2}')
	Format "MEM" "$cmd"
}

Disk() {
	local cmd=$(df -h | awk '{if ($6 == "/") print $3 "/" $2}')
	Format "DISK" "$cmd"
}

CPU() {
	local temp=$(cat /sys/class/thermal/thermal_zone0/temp)
	local c=$(expr $temp / 1000)
	Format "CPU" "$c%"
}

Network() {
	local state="DOWN"

	if [[ $(ip -4 a | grep -o "state UP") == "state UP" ]]
	then 
		state="UP"
	else 
		state="DOWN"
	fi

	Format "NET" "$state"
}

Workspaces() {
	local focused=$(bspc query -D --names -d focused)
	bspc query -D --names | 
		while read -r d; do 
			printf "%%{A:bspc desktop -f $d:}"
			if [ $d == $focused ]; then
				printf "[$d]  "
			else
				printf "$d  "
			fi
			printf "%%{A}"
		done
}

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc subscribe desktop > "$PANEL_FIFO" &
while true; do
	printf "\n" > "$PANEL_FIFO"
	sleep 5
done &

while read -r event; do
	ws=$(Workspaces)
	time=$(CurrentTime)
	uptime=$(Uptime)
	disk=$(Disk)
	cpu=$(CPU)
	mem=$(Memory)
	net=$(Network)
	fmt="%%{l}  %s%%{c}%s%%{r}%s  %s  %s  %s  %s  "
	printf "$fmt" "$ws" "$time" "$uptime" "$disk" "$cpu" "$mem" "$net"
done < "$PANEL_FIFO"
